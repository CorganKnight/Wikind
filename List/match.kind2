// Automatically derived from List/_.type
List.match <t: Type> (x: (List t)) -(p: (x: (List t)) Type) (nil: (p (List.nil t))) (cons: (head: t) (tail: (List t)) (p (List.cons t head tail))) : (p x)
List.match t (List.nil _t) p nil cons = (nil)
List.match t (List.cons _t _head _tail) p nil cons = (cons _head _tail)
