Testing.example : Testing String {
  do Testing {
    return Unit.new
  }
}

Testing <a> (value:) : Type {
  (Testing.Result a)
}

Testing.Result (a: Type) : Type
Testing.Result.new <a: Type> (val: a) : (Testing.Result a)

Testing.bind <a> <b> (t: Testing a) (next: a -> Testing b) : Testing b {
    let r_a  = t
    let r_b  = (next (Testing.get_val r_a))
    r_b
}

Testing.pure <a> (x: a) : Testing {
    Testing.Result.new x
}

// Aux

Testing.get_val <a> (t: Testing.Result a ) : a 
Testing.get_val (Testing.Result.new val) = val

Example : Testing String {
  do Testing {
    ask str = Testing.example
    let str = String.to_lower str
    return str
  }
}

Main {
  Example
}