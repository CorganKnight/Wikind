Nat.add.comm (a: Nat) (b: Nat) : Equal Nat (Nat.add a b) (Nat.add b a)
Nat.add.comm Nat.zero     b = Nat.add.identity_right b
Nat.add.comm (Nat.succ a) b =
  let e0 = Equal.apply (x => Nat.succ x) (Nat.add.comm a b)
  let e1 = Equal.mirror (Nat.add.comm.b b a)
  Equal.chain e0 e1

Nat.add.comm.b (a: Nat) (b: Nat): Equal Nat (Nat.add a (Nat.succ b)) (Nat.succ (Nat.add a b))
Nat.add.comm.b Nat.zero     b = Equal.refl
Nat.add.comm.b (Nat.succ a) b = Equal.apply (x => Nat.succ x) (Nat.add.comm.b a b)
