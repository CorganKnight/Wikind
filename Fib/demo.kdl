// Nat_zero #Nat_zero : (Nat)
ctr {Nat_zero}

// Nat_succ #Nat_succ (pred: (Nat)) : (Nat)
ctr {Nat_succ pred}

// Demo_Act_inc #Demo_Act_inc : (Demo_Act)
ctr {Demo_Act_inc}

// Demo #Demo (action: (Demo_Act)) : (Kindelia_IO (Nat))
fun (Demo action) {
  (Demo {Demo_Act_inc}) = {TAKE @x let y = {Nat_succ x}; dup _0 _1 = y; {SAVE _0 @~ {DONE _1}}}
} with {
  (Demo_init)
}

// Demo_init #Demo_init : _
fun (Demo_init) {
  (Demo_init) = {Nat_succ {Nat_zero}}
}

run {
  ask x = (Call 'Demo' {Demo_Act_inc});
  (Done x)
}

run {
  ask x = (Call 'Demo' {Demo_Act_inc});
  (Done x)
}
